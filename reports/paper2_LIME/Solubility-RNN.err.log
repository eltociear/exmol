Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from IPython.display import display, SVG

desc_type = ["Classic", "ecfp", "maccs"]

for d in desc_type:
    beta = exmol.lime_explain(space, descriptor_type=d)
    if d == "ecfp":
        exmol.plot_descriptors(space, output_file=f"{d}.svg")
        plt.close()
    else:
        exmol.plot_descriptors(space)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
Cell [0;32mIn [14], line 6[0m
[1;32m      3[0m desc_type [38;5;241m=[39m [[38;5;124m"[39m[38;5;124mClassic[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124mecfp[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124mmaccs[39m[38;5;124m"[39m]
[1;32m      5[0m [38;5;28;01mfor[39;00m d [38;5;129;01min[39;00m desc_type:
[0;32m----> 6[0m     beta [38;5;241m=[39m [43mexmol[49m[38;5;241;43m.[39;49m[43mlime_explain[49m[43m([49m[43mspace[49m[43m,[49m[43m [49m[43mdescriptor_type[49m[38;5;241;43m=[39;49m[43md[49m[43m)[49m
[1;32m      7[0m     [38;5;28;01mif[39;00m d [38;5;241m==[39m [38;5;124m"[39m[38;5;124mecfp[39m[38;5;124m"[39m:
[1;32m      8[0m         exmol[38;5;241m.[39mplot_descriptors(space, output_file[38;5;241m=[39m[38;5;124mf[39m[38;5;124m"[39m[38;5;132;01m{[39;00md[38;5;132;01m}[39;00m[38;5;124m.svg[39m[38;5;124m"[39m)

File [0;32m/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/exmol/exmol.py:744[0m, in [0;36mlime_explain[0;34m(examples, descriptor_type, return_beta)[0m
[1;32m    736[0m [38;5;124;03m"""From given :obj:`Examples<Example>`, find descriptor t-statistics (see[39;00m
[1;32m    737[0m [38;5;124;03m:doc: `index`)[39;00m
[1;32m    738[0m 
[0;32m   (...)[0m
[1;32m    741[0m [38;5;124;03m:return_beta: Whether or not the function should return regression coefficient values[39;00m
[1;32m    742[0m [38;5;124;03m"""[39;00m
[1;32m    743[0m [38;5;66;03m# add descriptors[39;00m
[0;32m--> 744[0m examples [38;5;241m=[39m [43madd_descriptors[49m[43m([49m[43mexamples[49m[43m,[49m[43m [49m[43mdescriptor_type[49m[43m)[49m
[1;32m    745[0m [38;5;66;03m# weighted tanimoto similarities[39;00m
[1;32m    746[0m w [38;5;241m=[39m np[38;5;241m.[39marray([[38;5;241m1[39m [38;5;241m/[39m ([38;5;241m1[39m [38;5;241m+[39m ([38;5;241m1[39m [38;5;241m/[39m (e[38;5;241m.[39msimilarity [38;5;241m+[39m [38;5;241m0.000001[39m) [38;5;241m-[39m [38;5;241m1[39m) [38;5;241m*[39m[38;5;241m*[39m [38;5;241m5[39m) [38;5;28;01mfor[39;00m e [38;5;129;01min[39;00m examples])

File [0;32m/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/exmol/exmol.py:313[0m, in [0;36madd_descriptors[0;34m(examples, descriptor_type, mols)[0m
[1;32m    307[0m     descriptors [38;5;241m=[39m [38;5;28mtuple[39m([[38;5;241m1[39m [38;5;28;01mif[39;00m x [38;5;129;01min[39;00m b[38;5;241m.[39mkeys() [38;5;28;01melse[39;00m [38;5;241m0[39m [38;5;28;01mfor[39;00m x [38;5;129;01min[39;00m descriptor_names])
[1;32m    308[0m     e[38;5;241m.[39mdescriptors [38;5;241m=[39m Descriptors(
[1;32m    309[0m         descriptor_type[38;5;241m=[39mdescriptor_type,
[1;32m    310[0m         descriptors[38;5;241m=[39mdescriptors,
[1;32m    311[0m         descriptor_names[38;5;241m=[39mdescriptor_names,
[1;32m    312[0m     )
[0;32m--> 313[0m ecfp_names [38;5;241m=[39m [43m_ecfp_names[49m[43m([49m[43mexamples[49m[43m)[49m  [38;5;66;03m# type: Tuple[str][39;00m
[1;32m    314[0m [38;5;28;01mfor[39;00m e [38;5;129;01min[39;00m examples:
[1;32m    315[0m     e[38;5;241m.[39mdescriptors[38;5;241m.[39mplotting_names [38;5;241m=[39m ecfp_names

File [0;32m/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/exmol/exmol.py:74[0m, in [0;36m_ecfp_names[0;34m(examples)[0m
[1;32m     72[0m         name [38;5;241m=[39m _name_morgan_bit(m, b, k)
[1;32m     73[0m     [38;5;28;01melse[39;00m:
[0;32m---> 74[0m         name [38;5;241m=[39m [43m_name_morgan_bit[49m[43m([49m[43mbase_mol[49m[43m,[49m[43m [49m[43mbitInfo[49m[43m,[49m[43m [49m[43mk[49m[43m)[49m
[1;32m     75[0m     result[38;5;241m.[39mappend(name)
[1;32m     76[0m [38;5;28;01mreturn[39;00m [38;5;28mtuple[39m(result)

File [0;32m/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/exmol/exmol.py:211[0m, in [0;36m_name_morgan_bit[0;34m(m, bitInfo, key)[0m
[1;32m    208[0m     [38;5;28;01mimport[39;00m [38;5;21;01mexmol[39;00m[38;5;21;01m.[39;00m[38;5;21;01mlime_data[39;00m  [38;5;66;03m# type: ignore[39;00m
[1;32m    210[0m     sp [38;5;241m=[39m files(exmol[38;5;241m.[39mlime_data)[38;5;241m.[39mjoinpath([38;5;124m"[39m[38;5;124msmarts.txt[39m[38;5;124m"[39m)
[0;32m--> 211[0m     _SMARTS [38;5;241m=[39m [43m_load_smarts[49m[43m([49m[43msp[49m[43m)[49m
[1;32m    212[0m morgan_atoms [38;5;241m=[39m _bit2atoms(m, bitInfo, key)
[1;32m    213[0m names [38;5;241m=[39m []

File [0;32m/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/exmol/exmol.py:193[0m, in [0;36m_load_smarts[0;34m(path, rank_cutoff)[0m
[1;32m    191[0m i2 [38;5;241m=[39m line[38;5;241m.[39mfind([38;5;124m"[39m[38;5;124m:[39m[38;5;124m"[39m, i1 [38;5;241m+[39m [38;5;241m1[39m)
[1;32m    192[0m m [38;5;241m=[39m MolFromSmarts(line[i2 [38;5;241m+[39m [38;5;241m1[39m :][38;5;241m.[39mstrip())
[0;32m--> 193[0m rank [38;5;241m=[39m [38;5;28;43mint[39;49m[43m([49m[43mline[49m[43m[[49m[43mi1[49m[43m [49m[38;5;241;43m+[39;49m[43m [49m[38;5;241;43m1[39;49m[43m [49m[43m:[49m[43m [49m[43mi2[49m[43m][49m[43m)[49m
[1;32m    194[0m [38;5;28;01mif[39;00m rank [38;5;241m>[39m rank_cutoff:
[1;32m    195[0m     [38;5;28;01mcontinue[39;00m

[0;31mValueError[0m: invalid literal for int() with base 10: 'a'
ValueError: invalid literal for int() with base 10: 'a'

